{"version":3,"sources":["webpack:///./src/pages/components/forms/index.js","webpack:///./node_modules/match-sorter/dist/match-sorter.esm.js"],"names":["React","__webpack_require__","_reduxForm","_matchSorter","_interopRequireDefault","_mangoComponents","_Layout","i","e","__esModule","default","c","Symbol","iterator","constructor","prototype","u","t","n","length","r","enumerable","configurable","writable","Object","defineProperty","key","b","setPrototypeOf","getPrototypeOf","__proto__","f","p","ReferenceError","d","value","TextAreaWithTootlip","_ref","meta","rest","a","l","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","call","_objectWithoutProperties","createElement","TextArea","Tootlip","visible","touched","error","fruits","name","color","Form","Promise","resolve","setTimeout","TypeError","create","Component","_this$props","this","props","submitting","submitSucceeded","handleSubmit","reset","Field","type","placeholder","label","component","Input","disabled","Checkbox","href","onClick","alert","Select","items","filterItems","inputValue","maxRanking","matchSorter","rankings","STARTS_WITH","renderItem","item","style","mapItemToString","fruit","TypeaheadInput","autoComplete","DatePicker","Button","submit","role","aria-label","v","E","reduxForm","form","validate","values","errors","password","email","some","_ref2","asyncValidate","then","async-validating-text","asyncBlurFields","__webpack_exports__","diacritics","fn","module","definition","exports","Diacritics","output","map","reference","base","letters","refLength","split","j","letLength","clean","input","letter","string","index","_typeof","obj","_extends","assign","target","arguments","source","hasOwnProperty","CASE_SENSITIVE_EQUAL","EQUAL","WORD_STARTS_WITH","STRING_CASE","STRING_CASE_ACRONYM","CONTAINS","ACRONYM","MATCHES","NO_MATCH","caseRankings","CAMEL","PASCAL","KEBAB","SNAKE","NO_CASE","options","_options$threshold","threshold","reduce","matches","_getHighestRanking","allVals","itemObj","nestedKey","concat","forEach","itemValue","push","attributes","Infinity","minRanking","_ref3","rank","keyIndex","newRank","getMatchRanking","sort","sortRankedItems","testString","stringToRank","prepareValueForComparison","acronym","caseRank","containsUpperCase","toLowerCase","containsDash","containsUnderscore","toUpperCase","isPartial","caseRanking","testIndex","isCasedAcronym","splitValue","splitTestString","correct","char","charIndex","splitItem","wordInString","splitByHyphenWord","substr","charNumber","findMatchingCharacter","matchChar","firstIndex","spread","matching","aRank","aIndex","aKeyIndex","bRank","bIndex","bKeyIndex","_ref4","keepDiacritics"],"mappings":"8MAEA,IAAAA,0SAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,MAEAI,EAAAJ,EAAA,KAUAK,EAAAF,EAAAH,EAAA,eAAAM,EAAAC,GAAA,OAAAA,KAAAC,WAAAD,GAAAE,QAAAF,GAAA,SAAAG,EAAAH,GAAA,OAAAG,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAL,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAM,cAAAF,QAAAJ,IAAAI,OAAAG,UAAA,gBAAAP,OAAA,SAAAQ,EAAAR,EAAAS,GAAA,QAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,KAAAE,EAAAH,EAAAC,GAAAE,EAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,YAAAF,MAAAG,UAAA,GAAAC,OAAAC,eAAAjB,EAAAY,EAAAM,IAAAN,IAAA,SAAAO,EAAAnB,GAAA,OAAAmB,EAAAH,OAAAI,eAAAJ,OAAAK,eAAA,SAAArB,GAAA,OAAAA,EAAAsB,WAAAN,OAAAK,eAAArB,QAAA,SAAAuB,EAAAvB,EAAAS,GAAA,OAAAc,EAAAP,OAAAI,gBAAA,SAAApB,EAAAS,GAAA,OAAAT,EAAAsB,UAAAb,EAAAT,MAAAS,GAAA,SAAAe,EAAAxB,GAAA,YAAAA,EAAA,UAAAyB,eAAA,oEAAAzB,EAAA,SAAA0B,EAAA1B,EAAAS,EAAAC,GAAA,OAAAD,KAAAT,EAAAgB,OAAAC,eAAAjB,EAAAS,GAAAkB,MAAAjB,EAAAG,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAS,GAAAC,EAAAV,EAEA,IAAM4B,EAAsB,SAAAC,GAAA,IAC1BC,EAD0BD,EAC1BC,KACGC,EAJL,SAAA/B,EAAAS,GAAA,SAAAT,EAAA,aAAAU,EAAAE,EAAAoB,EAAA,SAAAhC,EAAAS,GAAA,SAAAT,EAAA,aAAAU,EAAAE,EAAAoB,KAAAC,EAAAjB,OAAAkB,KAAAlC,GAAA,IAAAY,EAAA,EAAAA,EAAAqB,EAAAtB,OAAAC,IAAAF,EAAAuB,EAAArB,GAAAH,EAAA0B,QAAAzB,IAAA,IAAAsB,EAAAtB,GAAAV,EAAAU,IAAA,OAAAsB,EAAA,CAAAhC,EAAAS,GAAA,GAAAO,OAAAoB,sBAAA,KAAAH,EAAAjB,OAAAoB,sBAAApC,GAAA,IAAAY,EAAA,EAAAA,EAAAqB,EAAAtB,OAAAC,IAAAF,EAAAuB,EAAArB,GAAAH,EAAA0B,QAAAzB,IAAA,GAAAM,OAAAT,UAAA8B,qBAAAC,KAAAtC,EAAAU,KAAAsB,EAAAtB,GAAAV,EAAAU,IAAA,OAAAsB,EAE4BO,CAAAV,GAAA,gBAI1BrC,EAAAgD,cAAC3C,EAAA4C,+UAAkBV,GAAMD,SACvBtC,EAAAgD,cAAC3C,EAAA6C,SAAQC,QAASb,EAAKc,SAAWd,EAAKe,OAAvC,wCAYEC,IACFC,KAAM,QAASC,MAAO,QACtBD,KAAM,SAAUC,MAAO,WACvBD,KAAM,OAAQC,MAAO,UACrBD,KAAM,SAAUC,MAAO,WAGdC,gVACF,kBACP,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAW,kBAAMD,KAAW,SAAAzC,EAAA,IAAAA,EAAAX,EAAA,gBAAAC,EAAAS,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA4C,UAAA,sDAAArD,EAAAO,UAAAS,OAAAsC,OAAA7C,KAAAF,WAAAD,aAAAqB,MAAA3B,EAAAe,UAAA,EAAAD,cAAA,KAAAL,GAAAc,EAAAvB,EAAAS,GAAA,CAAAA,EAF7BjB,EAAM+D,kDAIrB,IAAAC,EACsDC,KAAKC,MAA1DC,EADDH,EACCG,WAAYC,EADbJ,EACaI,gBAAiBC,EAD9BL,EAC8BK,aAAcC,EAD5CN,EAC4CM,MAMnD,OAJIF,GACFR,WAAW,kBAAMU,KAAS,KAI1BtE,EAAAgD,cAAC1C,EAAAI,QAAD,KACEV,EAAAgD,cAAA,mBACAhD,EAAAgD,cAAA,mBACAhD,EAAAgD,cAAA,YACEhD,EAAAgD,cAAC9C,EAAAqE,OACCC,KAAK,QACLjB,KAAK,QACLkB,YAAY,QACZC,MAAM,QACNC,UAAWC,UAEb5E,EAAAgD,cAAC9C,EAAAqE,OACCC,KAAK,WACLjB,KAAK,WACLkB,YAAY,WACZC,MAAM,WACNC,UAAWC,UAEb5E,EAAAgD,cAAC9C,EAAAqE,OACCC,KAAK,OACLjB,KAAK,eACLkB,YAAY,gBACZC,MAAM,gBACNC,UAAWC,UAEb5E,EAAAgD,cAAC9C,EAAAqE,OACCC,KAAK,OACLjB,KAAK,gBACLkB,YAAY,iBACZC,MAAM,iBACNC,UAAWC,QACXC,cAEF7E,EAAAgD,cAAC9C,EAAAqE,OACCC,KAAK,OACLjB,KAAK,wBACLkB,YAAY,wBACZC,MAAM,yBACNC,UAAWC,UAEb5E,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,WACLmB,MAAM,WACND,YAAY,WACZE,UAAW1B,aAEbjD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,mBACLmB,MAAM,mBACND,YAAY,mBACZE,UAAWvC,IAEbpC,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,oBACLmB,MAAM,oBACND,YAAY,oBACZE,UAAW1B,WACX4B,cAEF7E,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,UACLmB,MAAM,8CACND,YAAY,UACZE,UAAWG,cAGf9E,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OAAMhB,KAAK,WAAWkB,YAAY,WAAWE,UAAWG,YAAzD,uBACuB,IACrB9E,EAAAgD,cAAA,KAAG+B,KAAK,8BAAR,gCAKJ/E,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OAAMhB,KAAK,WAAWkB,YAAY,WAAWE,UAAWG,YAAzD,yBACyB,IACvB9E,EAAAgD,cAAA,UACEwB,KAAK,SACLQ,QAAS,WAEPC,MAAM,4CAJV,cAWJjF,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,kBACLmB,MAAM,uBACND,YAAY,kBACZE,UAAWG,cAGf9E,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,mBACLmB,MAAM,wBACND,YAAY,mBACZE,UAAWG,WACXD,eAGJ7E,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,SACLmB,MAAM,SACND,YAAY,SACZE,UAAWO,UAEXlF,EAAAgD,cAAA,UAAQb,MAAM,YAAd,YACAnC,EAAAgD,cAAA,UAAQb,MAAM,YAAd,cAGJnC,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,kBACLmB,MAAM,kBACND,YAAY,kBACZE,UAAWO,SACXL,aAEA7E,EAAAgD,cAAA,UAAQb,MAAM,YAAd,YACAnC,EAAAgD,cAAA,UAAQb,MAAM,YAAd,cAGJnC,EAAAgD,cAAA,WACEhD,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,iBACLmB,MAAM,iBACND,YAAY,iBACZE,UAAWO,UAEXlF,EAAAgD,cAAA,UAAQb,MAAM,YAAd,YACAnC,EAAAgD,cAAA,UAAQb,MAAM,YAAd,cAGJnC,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,QACLmB,MAAM,mBACNS,MAAO7B,EACPmB,YAAY,mBACZW,YAAa,SAACD,EAAOE,GAAR,SACXlF,EAAAO,SAAYyE,EAAOE,GACjB3C,MAAO,QACP4C,WAAYC,UAAYC,SAASC,eAGrCC,WAAY,SAAAC,GAAI,OACd3F,EAAAgD,cAAA,QAAM4C,OAASpC,MAAOmC,EAAKnC,QAAUmC,EAAKpC,OAE5CsC,gBAAiB,SAAAC,GAAK,OAAKA,EAAQA,EAAMvC,KAAO,IAChDoB,UAAWoB,mBAEb/F,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,OACLmB,MAAM,kBACNsB,aAAa,MACbrB,UAAWsB,aACXxB,YAAY,eAEdzE,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,eACLmB,MAAM,0BACNsB,aAAa,MACbrB,UAAWsB,aACXxB,YAAY,eAEdzE,EAAAgD,cAAC9C,EAAAqE,OACChB,KAAK,gBACLmB,MAAM,2BACNG,YACAmB,aAAa,MACbrB,UAAWsB,aACXxB,YAAY,eAEdzE,EAAAgD,cAAC3C,EAAA6F,QAAOlB,QAASX,EAAaJ,KAAKkC,SAAnC,KAEEnG,EAAAgD,cAAC3C,EAAA6C,SAAQC,QAASgB,GAAlB,6BACAnE,EAAAgD,cAAC3C,EAAA6C,SAAQC,QAASiB,GAAlB,iCACiC,IAC/BpE,EAAAgD,cAAA,QAAMoD,KAAK,MAAMC,aAAW,kBAA5B,eAAArF,EAAAE,EAAAH,UAAAR,GAAAU,EApMDwC,GAoMCxC,EAAAwC,KAAA6C,EAWd,IAAAC,GAAA,EAkCerG,EAAAsG,YACbC,KAAM,OACNC,SApCe,SAAAC,GACf,IAAMC,KAwBN,OAtBKD,EAAOE,WACVD,EAAOC,SAAW,4BAGfF,EAAOG,QACVF,EAAOE,MAAQ,oCAGZH,EAAOb,QACVc,EAAOd,MAAQ,4BAGZxC,EAAOyD,KAAK,SAAAC,GAAA,OAAAA,EAAGzD,OAAoBoD,EAAOb,UAC7Cc,EAAOd,MAAQ,4CAGjBc,EAAO,qBACPA,EAAO,mBACPA,EAAO,mBACPA,EAAO,uBACPA,EAAO,sBAEAA,GAYPK,cAToB,kBACpB,IAAIvD,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,OAAOuD,KAAK,WAErD,MADiBC,wBAAyB,SAQ5CC,iBAAkB,0BAtCpB,CAuCG3D,wDChSHxD,EAAAiC,EAAAmF,EAAA,6BAAA7B,IAIA,IAAA8B,EAJA,SAAAC,EAAAC,GACA,OAGA,SAAAA;;CASA,SAAAjE,EAAAkE,GACAD,EAAAE,QAAAF,EAAAE,QAAAD,IAEAxD,KAAA0D,WAAAF,IAHA,CAIC,aAyGD,IAvGA,IAAAG,GACAC,QAIAC,IACKC,KAAA,IAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,uCACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,QACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,cACAD,KAAA,IAAAC,QAAA,iBACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,IAAAC,QAAA,mCACAD,KAAA,IAAAC,QAAA,WACAD,KAAA,IAAAC,QAAA,oBACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,IAAAC,QAAA,yBACAD,KAAA,IAAAC,QAAA,UACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,IAAAC,QAAA,uBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,aACAD,KAAA,IAAAC,QAAA,qBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,gDACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,eACAD,KAAA,IAAAC,QAAA,WACAD,KAAA,IAAAC,QAAA,sBACAD,KAAA,IAAAC,QAAA,sBACAD,KAAA,IAAAC,QAAA,oBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,uCACAD,KAAA,IAAAC,QAAA,aACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,eACAD,KAAA,IAAAC,QAAA,UACAD,KAAA,IAAAC,QAAA,oBACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,IAAAC,QAAA,yCACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,QACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,cACAD,KAAA,IAAAC,QAAA,kBACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,IAAAC,QAAA,oCACAD,KAAA,IAAAC,QAAA,WACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,MAAAC,QAAA,MACAD,KAAA,MAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,oBACAD,KAAA,IAAAC,QAAA,oBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,yBACAD,KAAA,IAAAC,QAAA,WACAD,KAAA,IAAAC,QAAA,mBACAD,KAAA,IAAAC,QAAA,wBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,aACAD,KAAA,IAAAC,QAAA,0BACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,iDACAD,KAAA,KAAAC,QAAA,OACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,eACAD,KAAA,IAAAC,QAAA,WACAD,KAAA,IAAAC,QAAA,sBACAD,KAAA,IAAAC,QAAA,uBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,qBACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,uCACAD,KAAA,IAAAC,QAAA,aACAD,KAAA,KAAAC,QAAA,MACAD,KAAA,IAAAC,QAAA,gBACAD,KAAA,IAAAC,QAAA,UACAD,KAAA,IAAAC,QAAA,qBACAD,KAAA,IAAAC,QAAA,mBAILzH,EAAA,EAAA0H,EAAAH,EAAA3G,OAA+CZ,EAAA0H,EAAe1H,IAG9D,IAFA,IAAAyH,EAAAF,EAAAvH,GAAAyH,QAAAE,MAAA,IAEAC,EAAA,EAAAC,EAAAJ,EAAA7G,OAA+CgH,EAAAC,EAAeD,IAC9DP,EAAAC,IAAAG,EAAAG,IAAAL,EAAAvH,GAAAwH,KA6BA,OAnBAH,EAAAS,MAAA,SAAAC,GACA,IAAAA,MAAAnH,QAAAmH,EAAAnH,OAAA,EACA,SASA,IANA,IAIAoH,EAJAC,EAAA,GACAR,EAAAM,EAAAJ,MAAA,IACAO,EAAA,EACAtH,EAAA6G,EAAA7G,OAGUsH,EAAAtH,EAAgBsH,IAE1BD,IADAD,EAAAP,EAAAS,MACAb,EAAAC,IAAAD,EAAAC,IAAAU,KAGA,OAAAC,GAGAZ,IA1JgCL,CAAhCC,GAAkBE,aAAcF,EAAAE,QADhC,GA+JAgB,EAAA,mBAAA9H,QAAA,iBAAAA,OAAAC,SAAA,SAAA8H,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAA/H,QAAA+H,EAAA7H,cAAAF,QAAA+H,IAAA/H,OAAAG,UAAA,gBAAA4H,GAGAC,EAAApH,OAAAqH,QAAA,SAAAC,GACA,QAAAvI,EAAA,EAAiBA,EAAAwI,UAAA5H,OAAsBZ,IAAA,CACvC,IAAAyI,EAAAD,UAAAxI,GAEA,QAAAmB,KAAAsH,EACAxH,OAAAT,UAAAkI,eAAAnG,KAAAkG,EAAAtH,KACAoH,EAAApH,GAAAsH,EAAAtH,IAKA,OAAAoH,GAUAtD,GACA0D,qBAAA,EACAC,MAAA,EACA1D,YAAA,EACA2D,iBAAA,EACAC,YAAA,EACAC,oBAAA,EACAC,SAAA,EACAC,QAAA,EACAC,QAAA,EACAC,SAAA,GAGAC,GACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,MAAA,GACAC,QAAA,GAaA,SAAAzE,EAAAJ,EAAAhD,GACA,IAAA8H,EAAAlB,UAAA5H,OAAA,YAAA4H,UAAA,GAAAA,UAAA,MAGA,IAAA5G,EAAA,OAAAgD,EAEA,IAAAzC,EAAAuH,EAAAvH,KACAwH,EAAAD,EAAAE,UACAA,WAAAD,EAAA1E,EAAAiE,QAAAS,EAYA,OAVA/E,EAAAiF,OAAA,SAAAC,EAAA1E,EAAA8C,GACA,IAAA6B,EAuBA,SAAA3E,EAAAjD,EAAAP,EAAA8H,GACA,OAAAvH,EA+UA,SAAAiD,EAAAjD,GACA,OAAAA,EAAA0H,OAAA,SAAAG,EAAA7I,GACA,IAAAiF,EA7BA,SAAAhB,EAAAjE,GACA,qBAAAA,EAAA,YAAAgH,EAAAhH,MACAA,SAEA,IAAAS,EAcA,cAZAA,EADA,mBAAAT,EACAA,EAAAiE,IAEG,IAAAjE,EAAAiB,QAAA,KAEHjB,EAAAwG,MAAA,KAAAkC,OAAA,SAAAI,EAAAC,GACA,OAAAD,IAAAC,GAAA,MACK9E,GAELA,EAAAjE,OAIAgJ,OAAAvI,GAAA,KAlBA,CA6BAwD,EAAAjE,GASA,OARAiF,GACAA,EAAAgE,QAAA,SAAAC,GACAL,EAAAM,MACAD,YACAE,WAaA,SAAApJ,GAIA,MAHA,iBAAAA,IACAA,GAAWA,QAEXkH,GACAtD,WAAAyF,IACAC,iBACGtJ,GAPH,CAbAA,OAIA6I,OAXA,CA5UA5E,EAAAjD,GACA0H,OAAA,SAAApD,EAAAiE,EAAA1K,GACA,IAAA2K,EAAAlE,EAAAkE,KACAC,EAAAnE,EAAAmE,SACAP,EAAAK,EAAAL,UACAE,EAAAG,EAAAH,WAEAM,EAAAC,EAAAT,EAAAzI,EAAA8H,GACAe,EAAAF,EAAAE,WACA1F,EAAAwF,EAAAxF,WAWA,OATA8F,EAAAJ,GAAAI,GAAA5F,EAAAiE,QACA2B,EAAAJ,EACKI,EAAA9F,IACL8F,EAAA9F,GAEA8F,EAAAF,IACAA,EAAAE,EACAD,EAAA5K,IAEY2K,OAAAC,cACND,KAAA1F,EAAAkE,SAAAyB,UAAA,KAvBMD,KAAAG,EAAA1F,EAAAxD,EAAA8H,GAAAkB,UAAA,GAFZ,CAvBAxF,EAAAjD,EAAAP,EAAA8H,GACAiB,EAAAZ,EAAAY,KACAC,EAAAb,EAAAa,SAKA,OAHAD,GAAAf,GACAE,EAAAQ,MAAoBlF,OAAAuF,OAAAzC,QAAA0C,aAEpBd,OAEAiB,KAAAC,GAAA1D,IAAA,SAAAxF,GAEA,OADAA,EAAAsD,OAgDA,SAAA0F,EAAAG,EAAAC,EAAAxB,GAMA,GAJAuB,EAAAE,EAAAF,EAAAvB,IACAwB,EAAAC,EAAAD,EAAAxB,IAGA9I,OAAAqK,EAAArK,OACA,OAAAqE,EAAAkE,SAIA,GAAA8B,IAAAC,EACA,OAAAjG,EAAA0D,qBAGA,IA2DAV,EACAmD,EA5DAC,EA6EA,SAAAJ,GACA,IAAAK,EAAAL,EAAAM,gBAAAN,EACAO,EAAAP,EAAA7I,QAAA,QACAqJ,EAAAR,EAAA7I,QAAA,QAEA,OAAAkJ,GAAAG,IAAAD,EAIAF,IAAAG,GAAAD,GAIAF,GAAAE,GAAAC,EASArC,EAAAK,QARAwB,EAAA,GAAAS,gBAAAT,EAAA,GAEA7B,EAAAE,OAGAF,EAAAC,MATAD,EAAAI,MAJAJ,EAAAG,MANA,CA7EA0B,GACAU,EAkHA,SAAAV,EAAAC,EAAAU,GACA,IAAAC,EAAAZ,EAAAM,cAAAnJ,QAAA8I,EAAAK,eAEA,OAAAK,GACA,KAAAxC,EAAAI,MACA,YAAAyB,EAAAY,EAAA,GACA,KAAAzC,EAAAG,MACA,YAAA0B,EAAAY,EAAA,GACA,KAAAzC,EAAAE,OACA,KAAAF,EAAAC,MACA,WAAAwC,GAAAZ,EAAAY,KAAAZ,EAAAY,GAAAH,cACA,QACA,UAZA,CAlHAT,EAAAC,EAAAG,GACAS,EA2IA,SAAAb,EAAAC,EAAAG,GACA,IAAAU,EAAA,KACA,OA7IAV,GA8IA,KAAAjC,EAAAI,MACAuC,EAAA,IACA,MACA,KAAA3C,EAAAG,MACAwC,EAAA,IACA,MACA,KAAA3C,EAAAE,OACA,KAAAF,EAAAC,MACA0C,EAAA,YACA,MACA,QACAA,EAAA,KAGA,IAAAC,EAAAf,EAAAtD,MAAAoE,GACA,OAAAb,EAAAK,cAAA5D,MAAA,IAAAkC,OAAA,SAAAoC,EAAAC,EAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAF,GAAAG,KAAA,GAAAb,gBAAAW,OApBA,CA3IAjB,EAAAC,GAOA,OAJAD,IAAAM,kBACAL,IAAAK,eAIAtG,EAAA2D,MAAAyC,EAIA,IAAAJ,EAAA7I,QAAA8I,GACAjG,EAAAC,YAAAmG,GAIA,IAAAJ,EAAA7I,QAAA,IAAA8I,GACAjG,EAAA4D,iBAAAwC,EAIAM,EACA1G,EAAA6D,YAAAuC,EAIAA,EAAA,GAAAS,EACA7G,EAAA8D,oBAAAsC,GAIA,IAAAJ,EAAA7I,QAAA8I,GACAjG,EAAA+D,SAAAqC,EACG,IAAAH,EAAAtK,OAIHqE,EAAAkE,UAIA,KAeAlB,EAfAgD,EAgBAG,EAAA,GACAnD,EAAAN,MAAA,KACAyC,QAAA,SAAAiC,GACAA,EAAA1E,MAAA,KACAyC,QAAA,SAAAkC,GACAlB,GAAAkB,EAAAC,OAAA,SAGAnB,GAxBAhJ,QAAA8I,GACAjG,EAAAgE,QAAAoC,EAkIA,SAAAJ,EAAAC,GACA,IAAAsB,EAAA,EACA,SAAAC,EAAAC,EAAAzE,EAAAC,GACA,QAAAN,EAAAM,EAAuBN,EAAAK,EAAArH,OAAmBgH,IAAA,CAE1C,GADAK,EAAAL,KACA8E,EACA,OAAA9E,EAAA,EAGA,SAGA,IAAA+E,EAAAF,EAAAvB,EAAA,GAAAD,EAAA,GACA,GAAA0B,EAAA,EACA,OAAA1H,EAAAkE,SAEAqD,EAAAG,EACA,QAAA3M,EAAA,EAAiBA,EAAAkL,EAAAtK,OAAyBZ,IAAA,CAI1C,MAFAwM,EAAAC,EADAvB,EAAAlL,GACAiL,EAAAuB,KACA,GAEA,OAAAvH,EAAAkE,SAKA,gBAAAyD,GACA,IAAAC,EAAAD,EAAA1B,EAAAtK,OAAA,EAEA,OADAqE,EAAAiE,QAAA,EAAA2D,EAFA,CADAL,EAAAG,GA1BA,CA7HA1B,EAAAC,GAsKA,SAAAF,EAAA/I,EAAAb,GACA,IAEA0L,EAAA7K,EAAA0I,KACAoC,EAAA9K,EAAAiG,MACA8E,EAAA/K,EAAA2I,SACAqC,EAAA7L,EAAAuJ,KACAuC,EAAA9L,EAAA8G,MACAiF,EAAA/L,EAAAwJ,SAEA,OAAAkC,IAAAG,EACAD,IAAAG,EACAJ,EAAAG,GAXA,EACA,EAYAF,EAAAG,GAbA,EACA,EAeAL,EAAAG,GAhBA,EACA,EAyBA,SAAA9B,EAAAvJ,EAAAwL,GAOA,OAJAxL,EAAA,GAAAA,EAFAwL,EAAAC,iBAIAzL,EAAAmF,EAAAe,MAAAlG,IAEAA,EAxVAoD,EAAAC,WACAD,EAAAoE,eAyZAtC,EAAA3G,QAAAH","file":"component---src-pages-components-forms-index-js-c8a8a77f320065023f96.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport matchSorter from 'match-sorter';\nimport type { FormProps as $FormProps } from 'redux-form';\nimport {\n  Button,\n  Checkbox,\n  Tootlip,\n  Input,\n  TypeaheadInput,\n  TextArea,\n  Select,\n  DatePicker,\n} from 'mango-components';\nimport Layout from '../../../containers/Layout';\n\nconst TextAreaWithTootlip = ({\n  meta,\n  ...rest\n}: React.ElementConfig<typeof TextArea>): React.Node => (\n  <TextArea {...{ ...rest, meta }}>\n    <Tootlip visible={meta.touched && meta.error}>\n      There is an error with this field.\n    </Tootlip>\n  </TextArea>\n);\n\ntype Props = {} & $FormProps;\n\ntype State = {\n  done: boolean,\n};\n\nconst fruits = [\n  { name: 'apple', color: 'red' },\n  { name: 'orange', color: 'orange' },\n  { name: 'pear', color: 'green' },\n  { name: 'banana', color: 'yellow' },\n];\n\nexport class Form extends React.Component<Props, State> {\n  submit = (): Promise<void> =>\n    new Promise(resolve => setTimeout(() => resolve(), 3000));\n\n  render() {\n    const { submitting, submitSucceeded, handleSubmit, reset } = this.props;\n\n    if (submitSucceeded) {\n      setTimeout(() => reset(), 3000);\n    }\n\n    return (\n      <Layout>\n        <h2>Forms</h2>\n        <h3>Input</h3>\n        <form>\n          <Field\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            label=\"email\"\n            component={Input}\n          />\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            label=\"password\"\n            component={Input}\n          />\n          <Field\n            type=\"text\"\n            name=\"invalid-text\"\n            placeholder=\"invalid field\"\n            label=\"invalid field\"\n            component={Input}\n          />\n          <Field\n            type=\"text\"\n            name=\"disabled-text\"\n            placeholder=\"disabled field\"\n            label=\"disabled field\"\n            component={Input}\n            disabled\n          />\n          <Field\n            type=\"text\"\n            name=\"async-validating-text\"\n            placeholder=\"async-validating-text\"\n            label=\"async validating field\"\n            component={Input}\n          />\n          <Field\n            name=\"textarea\"\n            label=\"TextArea\"\n            placeholder=\"TextArea\"\n            component={TextArea}\n          />\n          <Field\n            name=\"invalid-textarea\"\n            label=\"Invalid TextArea\"\n            placeholder=\"Invalid TextArea\"\n            component={TextAreaWithTootlip}\n          />\n          <Field\n            name=\"disabled-textarea\"\n            label=\"Disabled TextArea\"\n            placeholder=\"Disabled TextArea\"\n            component={TextArea}\n            disabled\n          />\n          <div>\n            <Field\n              name=\"checken\"\n              label=\"This guy has no children, but a label prop.\"\n              placeholder=\"checken\"\n              component={Checkbox}\n            />\n          </div>\n          <div>\n            <Field name=\"checken2\" placeholder=\"checken2\" component={Checkbox}>\n              This guy has a link:{' '}\n              <a href=\"http://mangochutney.com.au\">\n                http://mangochutney.com.au\n              </a>\n            </Field>\n          </div>\n          <div>\n            <Field name=\"checken3\" placeholder=\"checken3\" component={Checkbox}>\n              This guy has a Button:{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  // eslint-disable-next-line no-alert\n                  alert('Thanks for following the instructions.');\n                }}\n              >\n                press me\n              </button>\n            </Field>\n          </div>\n          <div>\n            <Field\n              name=\"invalid-checken\"\n              label=\"This guy is invalid.\"\n              placeholder=\"invalid checken\"\n              component={Checkbox}\n            />\n          </div>\n          <div>\n            <Field\n              name=\"disabled-checken\"\n              label=\"This guy is disabled.\"\n              placeholder=\"disabled checken\"\n              component={Checkbox}\n              disabled\n            />\n          </div>\n          <div>\n            <Field\n              name=\"select\"\n              label=\"select\"\n              placeholder=\"select\"\n              component={Select}\n            >\n              <option value=\"option-1\">Option 1</option>\n              <option value=\"option-2\">Option 2</option>\n            </Field>\n          </div>\n          <div>\n            <Field\n              name=\"disabled-select\"\n              label=\"disabled select\"\n              placeholder=\"disabled select\"\n              component={Select}\n              disabled\n            >\n              <option value=\"option-1\">Option 1</option>\n              <option value=\"option-2\">Option 2</option>\n            </Field>\n          </div>\n          <div>\n            <Field\n              name=\"invalid-select\"\n              label=\"invalid select\"\n              placeholder=\"invalid select\"\n              component={Select}\n            >\n              <option value=\"option-1\">Option 1</option>\n              <option value=\"option-2\">Option 2</option>\n            </Field>\n          </div>\n          <Field\n            name=\"fruit\"\n            label=\"Enter fruit name\"\n            items={fruits}\n            placeholder=\"Enter fruit name\"\n            filterItems={(items, inputValue) =>\n              matchSorter(items, inputValue, {\n                keys: ['name'],\n                maxRanking: matchSorter.rankings.STARTS_WITH,\n              })\n            }\n            renderItem={item => (\n              <span style={{ color: item.color }}>{item.name}</span>\n            )}\n            mapItemToString={fruit => (fruit ? fruit.name : '')}\n            component={TypeaheadInput}\n          />\n          <Field\n            name=\"soup\"\n            label=\"Enter soup date\"\n            autoComplete=\"off\"\n            component={DatePicker}\n            placeholder=\"DD/MM/YYYY\"\n          />\n          <Field\n            name=\"invalid-soup\"\n            label=\"Enter soup date invalid\"\n            autoComplete=\"off\"\n            component={DatePicker}\n            placeholder=\"DD/MM/YYYY\"\n          />\n          <Field\n            name=\"disabled-soup\"\n            label=\"Enter soup date disabled\"\n            disabled\n            autoComplete=\"off\"\n            component={DatePicker}\n            placeholder=\"DD/MM/YYYY\"\n          />\n          <Button onClick={handleSubmit(this.submit)}>\n            Go\n            <Tootlip visible={submitting}>OK, please wait a moment…</Tootlip>\n            <Tootlip visible={submitSucceeded}>\n              Thanks for submitting the form{' '}\n              <span role=\"img\" aria-label=\"Thumbs up sign\">\n                👍\n              </span>\n            </Tootlip>\n          </Button>\n        </form>\n      </Layout>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = 'Please enter a password!';\n  }\n\n  if (!values.email) {\n    errors.email = 'Please enter your email address!';\n  }\n\n  if (!values.fruit) {\n    errors.fruit = 'Please enter your fruit!';\n  }\n\n  if (!fruits.some(({ name }) => name === values.fruit)) {\n    errors.fruit = 'That is not one of the available fruits!';\n  }\n\n  errors['invalid-select'] = true;\n  errors['invalid-soup'] = true;\n  errors['invalid-text'] = true;\n  errors['invalid-textarea'] = true;\n  errors['invalid-checken'] = true;\n\n  return errors;\n};\n\nconst asyncValidate = () =>\n  new Promise(resolve => setTimeout(resolve, 1000)).then(() => {\n    const errors = { 'async-validating-text': ':(' };\n    throw errors;\n  });\n\nexport default reduxForm({\n  form: 'Form',\n  validate,\n  asyncValidate,\n  asyncBlurFields: ['async-validating-text'],\n})(Form);\n","function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diacritics = createCommonjsModule(function (module) {\n// Diacritics.js\n// \n// Started as something to be an equivalent of the Google Java Library diacritics library for JavaScript.\n// Found this: http://jsperf.com/diacritics/6 and converted it into a reusable module.\n// \n// @author Nijiko Yonskai\n// @license MIT\n// @copyright Nijikokun 2013 <nijikokun@gmail.com>\n(function (name, definition) {\n  if ('object' != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof undefined == 'function' && undefined.amd) undefined(definition);\n  else this[name] = definition();\n})('Diacritics', function () {\n  // Create public object\n  var output = {\n    map: {}\n  };\n\n  // Create private reference map.\n  var reference = [\n    {'base':' ',    'letters':'\\u00A0'},\n    {'base':'A',    'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\n    {'base':'AA',   'letters':'\\uA732'},\n    {'base':'AE',   'letters':'\\u00C6\\u01FC\\u01E2'},\n    {'base':'AO',   'letters':'\\uA734'},\n    {'base':'AU',   'letters':'\\uA736'},\n    {'base':'AV',   'letters':'\\uA738\\uA73A'},\n    {'base':'AY',   'letters':'\\uA73C'},\n    {'base':'B',    'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\n    {'base':'C',    'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\n    {'base':'D',    'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\n    {'base':'DZ',   'letters':'\\u01F1\\u01C4'},\n    {'base':'Dz',   'letters':'\\u01F2\\u01C5'},\n    {'base':'E',    'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\n    {'base':'F',    'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\n    {'base':'G',    'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\n    {'base':'H',    'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\n    {'base':'I',    'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\n    {'base':'J',    'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\n    {'base':'K',    'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\n    {'base':'L',    'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\n    {'base':'LJ',   'letters':'\\u01C7'},\n    {'base':'Lj',   'letters':'\\u01C8'},\n    {'base':'M',    'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\n    {'base':'N',    'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\n    {'base':'NJ',   'letters':'\\u01CA'},\n    {'base':'Nj',   'letters':'\\u01CB'},\n    {'base':'O',    'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\n    {'base':'OI',   'letters':'\\u01A2'},\n    {'base':'OO',   'letters':'\\uA74E'},\n    {'base':'OU',   'letters':'\\u0222'},\n    {'base':'P',    'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\n    {'base':'Q',    'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\n    {'base':'R',    'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\n    {'base':'S',    'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\n    {'base':'T',    'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\n    {'base':'Th',   'letters':'\\u00DE'},\n    {'base':'TZ',   'letters':'\\uA728'},\n    {'base':'U',    'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\n    {'base':'V',    'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\n    {'base':'VY',   'letters':'\\uA760'},\n    {'base':'W',    'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\n    {'base':'X',    'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\n    {'base':'Y',    'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\n    {'base':'Z',    'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\n    {'base':'a',    'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251'},\n    {'base':'aa',   'letters':'\\uA733'},\n    {'base':'ae',   'letters':'\\u00E6\\u01FD\\u01E3'},\n    {'base':'ao',   'letters':'\\uA735'},\n    {'base':'au',   'letters':'\\uA737'},\n    {'base':'av',   'letters':'\\uA739\\uA73B'},\n    {'base':'ay',   'letters':'\\uA73D'},\n    {'base':'b',    'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\n    {'base':'c',    'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\n    {'base':'d',    'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\n    {'base':'dz',   'letters':'\\u01F3\\u01C6'},\n    {'base':'e',    'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\n    {'base':'f',    'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\n    {'base':'ff',   'letters':'\\uFB00'},\n    {'base':'fi',   'letters':'\\uFB01'},\n    {'base':'fl',   'letters':'\\uFB02'},\n    {'base':'ffi',  'letters':'\\uFB03'},\n    {'base':'ffl',  'letters':'\\uFB04'},\n    {'base':'g',    'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\n    {'base':'h',    'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\n    {'base':'hv',   'letters':'\\u0195'},\n    {'base':'i',    'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\n    {'base':'j',    'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\n    {'base':'k',    'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\n    {'base':'l',    'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\n    {'base':'lj',   'letters':'\\u01C9'},\n    {'base':'m',    'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\n    {'base':'n',    'letters':'\\x6E\\xF1\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509'},\n    {'base':'nj',   'letters':'\\u01CC'},\n    {'base':'o',    'letters':'\\u07C0\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\n    {'base':'oe',   'letters':'\\u0152\\u0153'},\n    {'base':'oi',   'letters':'\\u01A3'},\n    {'base':'ou',   'letters':'\\u0223'},\n    {'base':'oo',   'letters':'\\uA74F'},\n    {'base':'p',    'letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\n    {'base':'q',    'letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\n    {'base':'r',    'letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\n    {'base':'s',    'letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\n    {'base':'ss',   'letters':'\\xDF'},\n    {'base':'t',    'letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\n    {'base':'th',   'letters':'\\u00FE'},\n    {'base':'tz',   'letters':'\\uA729'},\n    {'base':'u',    'letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\n    {'base':'v',    'letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\n    {'base':'vy',   'letters':'\\uA761'},\n    {'base':'w',    'letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\n    {'base':'x',    'letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\n    {'base':'y',    'letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\n    {'base':'z',    'letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\n  ];\n\n  // Generate reference mapping\n  for (var i = 0, refLength = reference.length; i < refLength; i++){\n    var letters = reference[i].letters.split(\"\");\n\n    for (var j = 0, letLength = letters.length; j < letLength; j++){\n      output.map[letters[j]] = reference[i].base;\n    }\n  }\n\n  /**\n   * Clean accents (diacritics) from string.\n   * \n   * @param  {String} input String to be cleaned of diacritics.\n   * @return {String}\n   */\n  output.clean = function (input) {\n    if (!input || !input.length || input.length < 1) {\n      return \"\";\n    }\n\n    var string = \"\";\n    var letters = input.split(\"\");\n    var index = 0;\n    var length = letters.length;\n    var letter;\n\n    for (; index < length; index++) {\n      letter = letters[index];\n      string += letter in output.map ? output.map[letter] : letter;\n    }\n\n    return string;\n  };\n\n  return output;\n});\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * @name match-sorter\n * @license MIT license.\n * @copyright (c) 2017 Kent C. Dodds\n * @author Kent C. Dodds <kent@doddsfamily.us>\n */\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\n\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\n\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\nfunction matchSorter(items, value) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n\n  var keys = options.keys,\n      _options$threshold = options.threshold,\n      threshold = _options$threshold === undefined ? rankings.MATCHES : _options$threshold;\n\n  var matchedItems = items.reduce(function (matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex;\n\n    if (rank >= threshold) {\n      matches.push({ item: item, rank: rank, index: index, keyIndex: keyIndex });\n    }\n    return matches;\n  }, []);\n  return matchedItems.sort(sortRankedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n}\n\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {Number} - the highest ranking\n */\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return { rank: getMatchRanking(item, value, options), keyIndex: -1 };\n  }\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        keyIndex = _ref2.keyIndex;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n\n    var newRank = getMatchRanking(itemValue, value, options);\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n    }\n    return { rank: rank, keyIndex: keyIndex };\n  }, { rank: rankings.NO_MATCH, keyIndex: -1 });\n}\n\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options);\n\n  // too long\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  }\n\n  // case sensitive equals\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank);\n\n  // Lower casing before further comparison\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase();\n\n  // case insensitive equals\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  }\n\n  // starts with\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  }\n\n  // word starts with\n  if (testString.indexOf(' ' + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  }\n\n  // is a part inside a cased string\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  }\n\n  // is acronym for a cased string\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  }\n\n  // contains\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  }\n\n  // acronym\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  }\n\n  // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n  return getClosenessRanking(testString, stringToRank);\n}\n\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n    default:\n      return false;\n  }\n}\n\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a loose match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\nfunction getClosenessRanking(testString, stringToRank) {\n  var charNumber = 0;\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n      if (stringChar === matchChar) {\n        return j + 1;\n      }\n    }\n    return -1;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n  charNumber = firstIndex;\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return function (spread) {\n    var matching = spread - stringToRank.length + 1;\n    var ranking = rankings.MATCHES + 1 / matching;\n    return ranking;\n  }(spread);\n}\n\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first\n * Note: will never return 0\n */\nfunction sortRankedItems(a, b) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aIndex = a.index,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bIndex = b.index,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      return aIndex < bIndex ? aFirst : bFirst;\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n\n  value = '' + value; // toString\n  if (!keepDiacritics) {\n    value = diacritics.clean(value);\n  }\n  return value;\n}\n\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\nfunction getItemValues(item, key) {\n  if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n    key = key.key;\n  }\n  var value = void 0;\n  if (typeof key === 'function') {\n    value = key(item);\n    // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  }\n  // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n  return value != null ? [].concat(value) : null;\n}\n\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n    return allVals;\n  }, []);\n}\n\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = { key: key };\n  }\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n"],"sourceRoot":""}