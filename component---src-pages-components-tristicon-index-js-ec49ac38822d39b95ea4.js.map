{"version":3,"sources":["webpack:///./src/pages/components/tristicon/index.js","webpack:///./node_modules/strip-indent/index.js"],"names":["React","_interopRequireWildcard","__webpack_require__","_styledComponents","_stripIndent","_interopRequireDefault","_mangoComponents","_Layout","m","e","i","default","injectGlobal","_templateObject","createTristiconFontFace","TristiconExample","render","createElement","Tristicon","icon","t","Component","component","module","exports","str","match","indent","Math","min","apply","map","x","length","re","RegExp","replace"],"mappings":"iQAEAA,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,MACAI,EAAAJ,EAAA,KACAK,EAAAF,EAAAH,EAAA,eAAAM,IAAA,IAAAC,GAAA,EAAAC,EAAAC,UAAA,qBAAAH,EAAA,kBAAAC,MAAA,EAOAN,EAAAS,cAAAC,OACIP,EAAAQ,gCAGSC,sPAGXC,kBACE,OACEhB,EAAAiB,cAACV,EAAAI,QAAD,KACEX,EAAAiB,cAAA,uBACAjB,EAAAiB,cAAA,iHAIAjB,EAAAiB,cAAA,gIAEuD,IACrDjB,EAAAiB,cAAA,uCAHF,qBAKAjB,EAAAiB,cAAA,WACEjB,EAAAiB,cAAA,eAEEb,EAAAO,SAAA,iHAOJX,EAAAiB,cAAA,qBACAjB,EAAAiB,cAAA,WACEjB,EAAAiB,cAAA,WACEjB,EAAAiB,cAAA,eAEEb,EAAAO,SAAA,qEAKJX,EAAAiB,cAAA,SACEjB,EAAAiB,cAACX,EAAAY,WAAUC,KAAK,iBAAAC,EArCfL,CAAyBf,EAAMqB,gCA6CrC,IAAMC,EAAYP,sBAEVO,gDC/DfC,EAAAC,QAAAC,KACA,MAAAC,EAAAD,EAAAC,MAAA,mBAEA,IAAAA,EACA,OAAAD,EAIA,MAAAE,EAAAC,KAAAC,IAAAC,MAAAF,KAAAF,EAAAK,IAAAC,KAAAC,SACAC,EAAA,IAAAC,kBAAkCR,KAAQ,MAE1C,OAAAA,EAAA,EAAAF,EAAAW,QAAAF,EAAA,IAAAT","file":"component---src-pages-components-tristicon-index-js-ec49ac38822d39b95ea4.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { injectGlobal } from 'styled-components';\nimport stripIndent from 'strip-indent';\nimport { Tristicon, createTristiconFontFace } from 'mango-components';\nimport Layout from '../../../containers/Layout';\n\ntype Props = {};\n\ntype State = {};\n\n// eslint-disable-next-line no-unused-expressions\ninjectGlobal`\n  ${createTristiconFontFace()}\n`;\n\nexport class TristiconExample extends React.Component<Props, State> {\n  state = {};\n\n  render() {\n    return (\n      <Layout>\n        <h2>Tristicon</h2>\n        <p>\n          You will need to include the tristicon fonts with webpack copy or a\n          font loader (or w/e you please).\n        </p>\n        <p>\n          Another option is to use the Base 64 encoded WOFF file inline, so you\n          don&rsquo;t have to copy font files. You can use the{' '}\n          <code>createTristiconFontFace</code> export for this:\n        </p>\n        <pre>\n          <code>\n            {// prettier-ignore\n            stripIndent(`\n              injectGlobal\\`\n                \\${createTristiconFontFace()}\n              \\`;\n            `)}\n          </code>\n        </pre>\n        <h3>Example</h3>\n        <div>\n          <pre>\n            <code>\n              {// prettier-ignore\n              stripIndent(`\n                <Tristicon icon=\"facebook\" />\n              `)}\n            </code>\n          </pre>\n          <p>\n            <Tristicon icon=\"facebook\" />\n          </p>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const component = TristiconExample;\n\nexport default component;\n","'use strict';\nmodule.exports = str => {\n\tconst match = str.match(/^[ \\t]*(?=\\S)/gm);\n\n\tif (!match) {\n\t\treturn str;\n\t}\n\n\t// TODO: use spread operator when targeting Node.js 6\n\tconst indent = Math.min.apply(Math, match.map(x => x.length)); // eslint-disable-line\n\tconst re = new RegExp(`^[ \\\\t]{${indent}}`, 'gm');\n\n\treturn indent > 0 ? str.replace(re, '') : str;\n};\n"],"sourceRoot":""}