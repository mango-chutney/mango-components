{"version":3,"sources":["webpack:///./src/pages/components/tootlip/index.js"],"names":["o","React","__webpack_require__","_mangoComponents","_Layout","__esModule","default","c","e","Symbol","iterator","constructor","prototype","a","t","n","length","enumerable","configurable","writable","Object","defineProperty","key","u","setPrototypeOf","getPrototypeOf","__proto__","p","s","ReferenceError","TootlipExample","exampleBottomPlacementButtonIsActive","exampleButtonIsActive","exampleLeftPlacementButtonIsActive","exampleRightPlacementButtonIsActive","exampleTopPlacementButtonIsActive","isHovering","r","i","value","TypeError","create","Component","_this2","this","_this$state","state","createElement","onMouseOver","setState","onFocus","onMouseOut","onBlur","Tootlip","visible","placement","tootlipPlacements","auto","type","onClick","right","left","top","bottom","m","component"],"mappings":"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","file":"component---src-pages-components-tootlip-index-js-cff7d941fc3f9affae69.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { tootlipPlacements, Tootlip } from 'mango-components';\nimport Layout from '../../../containers/Layout';\n\ntype Props = {};\n\ntype State = {\n  exampleBottomPlacementButtonIsActive: boolean,\n  exampleButtonIsActive: boolean,\n  exampleLeftPlacementButtonIsActive: boolean,\n  exampleRightPlacementButtonIsActive: boolean,\n  exampleTopPlacementButtonIsActive: boolean,\n  isHovering: boolean,\n};\n\nexport class TootlipExample extends React.Component<Props, State> {\n  state = {\n    exampleBottomPlacementButtonIsActive: false,\n    exampleButtonIsActive: false,\n    exampleLeftPlacementButtonIsActive: false,\n    exampleRightPlacementButtonIsActive: false,\n    exampleTopPlacementButtonIsActive: false,\n    isHovering: false,\n  };\n\n  render() {\n    const {\n      exampleBottomPlacementButtonIsActive,\n      exampleButtonIsActive,\n      exampleLeftPlacementButtonIsActive,\n      exampleRightPlacementButtonIsActive,\n      exampleTopPlacementButtonIsActive,\n      isHovering,\n    } = this.state;\n\n    return (\n      <Layout>\n        <h2>Tootlip</h2>\n        <p>\n          <span\n            onMouseOver={() => {\n              this.setState({ isHovering: true });\n            }}\n            onFocus={() => {\n              this.setState({ isHovering: true });\n            }}\n            onMouseOut={() => {\n              this.setState({ isHovering: false });\n            }}\n            onBlur={() => {\n              this.setState({ isHovering: false });\n            }}\n          >\n            Hover on me\n            <Tootlip visible={isHovering} placement={tootlipPlacements.auto}>\n              Hey\n            </Tootlip>\n          </span>{' '}\n          for a tootlip.\n        </p>\n        <p>You can use it with buttons too.</p>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleButtonIsActive: !exampleButtonIsActive,\n              });\n            }}\n          >\n            {'Press (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleButtonIsActive}\n              placement={tootlipPlacements.auto}\n            >\n              Thanks for following the instructions.\n            </Tootlip>\n          </button>\n        </div>\n        <p>There are a couple of positioning options.</p>\n        <p>\n          If it looks like the tooltip is colliding with the edge of the\n          viewport, it will try other positions.\n        </p>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleRightPlacementButtonIsActive: !exampleRightPlacementButtonIsActive,\n              });\n            }}\n          >\n            {'Right (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleRightPlacementButtonIsActive}\n              placement={tootlipPlacements.right}\n            >\n              Mango Chutney\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() =>\n              this.setState({\n                exampleLeftPlacementButtonIsActive: !exampleLeftPlacementButtonIsActive,\n              })\n            }\n          >\n            {'Left (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleLeftPlacementButtonIsActive}\n              placement={tootlipPlacements.left}\n            >\n              Among Chutney\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleTopPlacementButtonIsActive: !exampleTopPlacementButtonIsActive,\n              });\n            }}\n          >\n            {'Top (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleTopPlacementButtonIsActive}\n              placement={tootlipPlacements.top}\n            >\n              Ace Gunny Moth\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() =>\n              this.setState({\n                exampleBottomPlacementButtonIsActive: !exampleBottomPlacementButtonIsActive,\n              })\n            }\n          >\n            {'Bottom (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleBottomPlacementButtonIsActive}\n              placement={tootlipPlacements.bottom}\n            >\n              Cage Ohm Tunny\n            </Tootlip>\n          </button>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const component = TootlipExample;\n\nexport default component;\n"],"sourceRoot":""}