{"version":3,"sources":["webpack:///./src/pages/components/tristicon/index.js","webpack:///./node_modules/strip-indent/index.js"],"names":["React","__webpack_require__","_styledComponents","_stripIndent","_interopRequireDefault","_mangoComponents","_Layout","a","e","__esModule","default","u","Symbol","iterator","constructor","prototype","f","t","n","length","r","enumerable","configurable","writable","Object","defineProperty","key","p","setPrototypeOf","getPrototypeOf","__proto__","s","b","ReferenceError","y","slice","freeze","defineProperties","raw","value","injectGlobal","_templateObject","createTristiconFontFace","TristiconExample","Component","createElement","Tristicon","icon","o","m","component","module","exports","str","match","indent","Math","min","apply","map","x","re","RegExp","replace"],"mappings":"+MAEA,IAAAA,0SAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,MACAI,EAAAJ,EAAA,KACAK,EAAAF,EAAAH,EAAA,eAAAM,EAAAC,GAAA,OAAAA,KAAAC,WAAAD,GAAAE,QAAAF,GAAA,SAAAG,EAAAH,GAAA,OAAAG,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAL,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAM,cAAAF,QAAAJ,IAAAI,OAAAG,UAAA,gBAAAP,OAAA,SAAAQ,EAAAR,EAAAS,GAAA,QAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,KAAAE,EAAAH,EAAAC,GAAAE,EAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,YAAAF,MAAAG,UAAA,GAAAC,OAAAC,eAAAjB,EAAAY,EAAAM,IAAAN,IAAA,SAAAO,EAAAnB,GAAA,OAAAmB,EAAAH,OAAAI,eAAAJ,OAAAK,eAAA,SAAArB,GAAA,OAAAA,EAAAsB,WAAAN,OAAAK,eAAArB,QAAA,SAAAuB,EAAAvB,EAAAS,GAAA,OAAAc,EAAAP,OAAAI,gBAAA,SAAApB,EAAAS,GAAA,OAAAT,EAAAsB,UAAAb,EAAAT,MAAAS,GAAA,SAAAe,EAAAxB,GAAA,YAAAA,EAAA,UAAAyB,eAAA,oEAAAzB,EAAA,SAAA0B,IAAA,IAAA1B,EAAA,SAAAA,EAAAS,GAAA,OAAAA,MAAAT,EAAA2B,MAAA,IAAAX,OAAAY,OAAAZ,OAAAa,iBAAA7B,GAAA8B,KAAAC,MAAAf,OAAAY,OAAAnB,OAAA,uBAAAiB,EAAA,kBAAA1B,MAAA,EAOAN,EAAAsC,cAAAC,OACIpC,EAAAqC,gCAGSC,6qBAAyB3C,EAAM4C,kDAIxC,OACE5C,EAAA6C,cAACvC,EAAAI,QAAD,KACEV,EAAA6C,cAAA,uBACA7C,EAAA6C,cAAA,iHAIA7C,EAAA6C,cAAA,gIAEuD,IACrD7C,EAAA6C,cAAA,uCAHF,qBAKA7C,EAAA6C,cAAA,WACE7C,EAAA6C,cAAA,eAEE1C,EAAAO,SAAA,iHAOJV,EAAA6C,cAAA,qBACA7C,EAAA6C,cAAA,WACE7C,EAAA6C,cAAA,WACE7C,EAAA6C,cAAA,eAEE1C,EAAAO,SAAA,qEAKJV,EAAA6C,cAAA,SACE7C,EAAA6C,cAACxC,EAAAyC,WAAUC,KAAK,qBAAA/B,EAAAE,EAAAH,UAAAiC,GAAA/B,EArCf0B,GAqCe1B,EAAA0B,iBAAAM,EAQrB,IAAMC,EAAYP,sBAEVO,gDC/DfC,EAAAC,QAAAC,KACA,MAAAC,EAAAD,EAAAC,MAAA,mBAEA,IAAAA,EACA,OAAAD,EAIA,MAAAE,EAAAC,KAAAC,IAAAC,MAAAF,KAAAF,EAAAK,IAAAC,KAAAzC,SACA0C,EAAA,IAAAC,kBAAkCP,KAAQ,MAE1C,OAAAA,EAAA,EAAAF,EAAAU,QAAAF,EAAA,IAAAR","file":"component---src-pages-components-tristicon-index-js-7c4bd6e79836e51d72ca.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { injectGlobal } from 'styled-components';\nimport stripIndent from 'strip-indent';\nimport { Tristicon, createTristiconFontFace } from 'mango-components';\nimport Layout from '../../../containers/Layout';\n\ntype Props = {};\n\ntype State = {};\n\n// eslint-disable-next-line no-unused-expressions\ninjectGlobal`\n  ${createTristiconFontFace()}\n`;\n\nexport class TristiconExample extends React.Component<Props, State> {\n  state = {};\n\n  render() {\n    return (\n      <Layout>\n        <h2>Tristicon</h2>\n        <p>\n          You will need to include the tristicon fonts with webpack copy or a\n          font loader (or w/e you please).\n        </p>\n        <p>\n          Another option is to use the Base 64 encoded WOFF file inline, so you\n          don&rsquo;t have to copy font files. You can use the{' '}\n          <code>createTristiconFontFace</code> export for this:\n        </p>\n        <pre>\n          <code>\n            {// prettier-ignore\n            stripIndent(`\n              injectGlobal\\`\n                \\${createTristiconFontFace()}\n              \\`;\n            `)}\n          </code>\n        </pre>\n        <h3>Example</h3>\n        <div>\n          <pre>\n            <code>\n              {// prettier-ignore\n              stripIndent(`\n                <Tristicon icon=\"facebook\" />\n              `)}\n            </code>\n          </pre>\n          <p>\n            <Tristicon icon=\"facebook\" />\n          </p>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const component = TristiconExample;\n\nexport default component;\n","'use strict';\nmodule.exports = str => {\n\tconst match = str.match(/^[ \\t]*(?=\\S)/gm);\n\n\tif (!match) {\n\t\treturn str;\n\t}\n\n\t// TODO: use spread operator when targeting Node.js 6\n\tconst indent = Math.min.apply(Math, match.map(x => x.length)); // eslint-disable-line\n\tconst re = new RegExp(`^[ \\\\t]{${indent}}`, 'gm');\n\n\treturn indent > 0 ? str.replace(re, '') : str;\n};\n"],"sourceRoot":""}