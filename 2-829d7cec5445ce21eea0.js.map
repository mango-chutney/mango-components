{"version":3,"sources":["webpack:///./node_modules/react-portal/es/utils.js","webpack:///./node_modules/react-portal/es/Portal.js","webpack:///./node_modules/react-portal/es/LegacyPortal.js","webpack:///./node_modules/react-portal/es/PortalCompat.js","webpack:///./node_modules/react-portal/es/PortalWithState.js","webpack:///../node_modules/react-popper/lib/react-popper.js","webpack:///../node_modules/prop-types/index.js","webpack:///../node_modules/popper.js/dist/esm/popper.js","webpack:///../node_modules/react-popper/lib/Manager.js","webpack:///../node_modules/prop-types/factoryWithThrowingShims.js","webpack:///../node_modules/fbjs/lib/emptyFunction.js","webpack:///../node_modules/fbjs/lib/invariant.js","webpack:///../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///../node_modules/react-popper/lib/Target.js","webpack:///../node_modules/react-popper/lib/Popper.js","webpack:///../node_modules/react-popper/node_modules/popper.js/dist/esm/popper.js","webpack:///../node_modules/react-popper/lib/Arrow.js"],"names":["canUseDOM","window","document","createElement","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","Portal_Portal","_React$Component","Portal","instance","TypeError","this","self","call","ReferenceError","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","value","setPrototypeOf","react_default","a","Component","defaultNode","body","removeChild","node","appendChild","react_dom_default","createPortal","children","propTypes","prop_types_default","isRequired","any","es_Portal","l","LegacyPortal_createClass","LegacyPortal_Portal","renderPortal","unmountComponentAtNode","portal","type","cloneElement","unstable_renderSubtreeIntoContainer","LegacyPortal","h","PortalCompat","PortalWithState_createClass","PortalWithState_PortalWithState","PortalWithState","_this","portalNode","state","active","defaultOpen","openPortal","bind","closePortal","wrapWithPortal","handleOutsideMouseClick","handleKeydown","closeOnEsc","addEventListener","closeOnOutsideClick","removeEventListener","e","nativeEvent","stopImmediatePropagation","setState","onOpen","onClose","_this2","ref","root","contains","button","keyCode","isOpen","func","bool","openByClickOn","element","defaultProps","n","d","t","v","277","exports","Arrow","Popper","Target","Manager","_Manager3","_interopRequireDefault","__webpack_require__","_Target3","_Popper3","_Arrow3","obj","__esModule","default","module","global","isBrowser","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","indexOf","debounce","Promise","fn","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","getStyleComputedProperty","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","firstElementChild","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","createClass","_extends","assign","source","hasOwnProperty","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","_ref","sort","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","data","ends","slice","prop","findIndex","cur","match","forEach","function","console","warn","enabled","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","getWindow","defaultView","isNumeric","isNaN","isFinite","setStyles","unit","isModifierRequired","requestingName","requestedName","requesting","_requesting","requested","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","Defaults","positionFixed","eventsEnabled","removeOnDestroy","onCreate","onUpdate","shift","basePlacement","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","offset","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","index2","parseOffset","preventOverflow","options","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","arrow","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","inner","subtractLength","hide","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttribute","removeAttribute","onLoad","modifierOptions","scheduleUpdate","requestAnimationFrame","update","isDestroyed","isCreated","scrollParents","jquery","enableEventListeners","disableEventListeners","updateBound","passive","scrollElement","attachToScrollParents","event","callback","isBody","push","setupEventListeners","cancelAnimationFrame","Utils","PopperUtils","__webpack_exports__","Q","356","_react","_propTypes2","_possibleConstructorReturn","_Component","_temp","_len","args","_key","_setTargetNode","_targetNode","_getTargetNode","popperManager","setTargetNode","getTargetNode","_props","tag","restProps","childContextTypes","object","oneOfType","string","emptyFunction","invariant","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","array","number","symbol","arrayOf","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","format","c","f","error","Error","argIndex","framesToPop","361","context","_props$component","component","innerRef","targetRef","targetProps","componentProps","contextTypes","_popper2","_defineProperty","_setArrowNode","_arrowNode","_getOffsets","_isDataDirty","JSON","stringify","_updateStateModifier","_getPopperStyle","_popper","pointerEvents","opacity","_data$offsets$popper","_getPopperPlacement","_getPopperHide","_getArrowStyle","_this$state$data$offs","setArrowNode","getArrowStyle","_updatePopper","lastProps","_destroyPopper","_node","_createPopper","updateState","destroy","_popperProps","_props2","popperRef","popperStyle","popperPlacement","popperHide","popperProps","data-placement","data-x-out-of-boundaries","isIE10$1","appVersion","err","J","364","arrowRef","arrowStyle","arrowProps"],"mappings":"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","file":"2-829d7cec5445ce21eea0.js","sourcesContent":["export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { canUseDOM } from './utils';\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  _createClass(Portal, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.defaultNode) {\n        document.body.removeChild(this.defaultNode);\n      }\n      this.defaultNode = null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!canUseDOM) {\n        return null;\n      }\n      if (!this.props.node && !this.defaultNode) {\n        this.defaultNode = document.createElement('div');\n        document.body.appendChild(this.defaultNode);\n      }\n      return ReactDOM.createPortal(this.props.children, this.props.node || this.defaultNode);\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nPortal.propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nexport default Portal;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// This file is a fallback for a consumer who is not yet on React 16\n// as createPortal was introduced in React 16\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  _createClass(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.renderPortal();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props) {\n      this.renderPortal();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      ReactDOM.unmountComponentAtNode(this.defaultNode || this.props.node);\n      if (this.defaultNode) {\n        document.body.removeChild(this.defaultNode);\n      }\n      this.defaultNode = null;\n      this.portal = null;\n    }\n  }, {\n    key: 'renderPortal',\n    value: function renderPortal(props) {\n      if (!this.props.node && !this.defaultNode) {\n        this.defaultNode = document.createElement('div');\n        document.body.appendChild(this.defaultNode);\n      }\n\n      var children = this.props.children;\n      // https://gist.github.com/jimfb/d99e0678e9da715ccf6454961ef04d1b\n      if (typeof this.props.children.type === 'function') {\n        children = React.cloneElement(this.props.children);\n      }\n\n      this.portal = ReactDOM.unstable_renderSubtreeIntoContainer(this, children, this.props.node || this.defaultNode);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nexport default Portal;\n\n\nPortal.propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};","import ReactDOM from 'react-dom';\n\nimport Portalv4 from './Portal';\nimport LegacyPortal from './LegacyPortal';\n\nvar Portal = void 0;\n\nif (ReactDOM.createPortal) {\n  Portal = Portalv4;\n} else {\n  Portal = LegacyPortal;\n}\n\nexport default Portal;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Portal from './PortalCompat';\n\nvar KEYCODES = {\n  ESCAPE: 27\n};\n\nvar PortalWithState = function (_React$Component) {\n  _inherits(PortalWithState, _React$Component);\n\n  function PortalWithState(props) {\n    _classCallCheck(this, PortalWithState);\n\n    var _this = _possibleConstructorReturn(this, (PortalWithState.__proto__ || Object.getPrototypeOf(PortalWithState)).call(this, props));\n\n    _this.portalNode = null;\n    _this.state = { active: !!props.defaultOpen };\n    _this.openPortal = _this.openPortal.bind(_this);\n    _this.closePortal = _this.closePortal.bind(_this);\n    _this.wrapWithPortal = _this.wrapWithPortal.bind(_this);\n    _this.handleOutsideMouseClick = _this.handleOutsideMouseClick.bind(_this);\n    _this.handleKeydown = _this.handleKeydown.bind(_this);\n    return _this;\n  }\n\n  _createClass(PortalWithState, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.closeOnEsc) {\n        document.addEventListener('keydown', this.handleKeydown);\n      }\n      if (this.props.closeOnOutsideClick) {\n        document.addEventListener('click', this.handleOutsideMouseClick);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.closeOnEsc) {\n        document.removeEventListener('keydown', this.handleKeydown);\n      }\n      if (this.props.closeOnOutsideClick) {\n        document.removeEventListener('click', this.handleOutsideMouseClick);\n      }\n    }\n  }, {\n    key: 'openPortal',\n    value: function openPortal(e) {\n      if (this.state.active) {\n        return;\n      }\n      if (e && e.nativeEvent) {\n        e.nativeEvent.stopImmediatePropagation();\n      }\n      this.setState({ active: true }, this.props.onOpen);\n    }\n  }, {\n    key: 'closePortal',\n    value: function closePortal() {\n      if (!this.state.active) {\n        return;\n      }\n      this.setState({ active: false }, this.props.onClose);\n    }\n  }, {\n    key: 'wrapWithPortal',\n    value: function wrapWithPortal(children) {\n      var _this2 = this;\n\n      if (!this.state.active) {\n        return null;\n      }\n      return React.createElement(\n        Portal,\n        {\n          node: this.props.node,\n          key: 'react-portal',\n          ref: function ref(portalNode) {\n            return _this2.portalNode = portalNode;\n          }\n        },\n        children\n      );\n    }\n  }, {\n    key: 'handleOutsideMouseClick',\n    value: function handleOutsideMouseClick(e) {\n      if (!this.state.active) {\n        return;\n      }\n      var root = this.portalNode.props.node || this.portalNode.defaultNode;\n      if (!root || root.contains(e.target) || e.button && e.button !== 0) {\n        return;\n      }\n      this.closePortal();\n    }\n  }, {\n    key: 'handleKeydown',\n    value: function handleKeydown(e) {\n      if (e.keyCode === KEYCODES.ESCAPE && this.state.active) {\n        this.closePortal();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children({\n        openPortal: this.openPortal,\n        closePortal: this.closePortal,\n        portal: this.wrapWithPortal,\n        isOpen: this.state.active\n      });\n    }\n  }]);\n\n  return PortalWithState;\n}(React.Component);\n\nPortalWithState.propTypes = {\n  children: PropTypes.func.isRequired,\n  defaultOpen: PropTypes.bool,\n  node: PropTypes.any,\n  openByClickOn: PropTypes.element,\n  closeOnEsc: PropTypes.bool,\n  closeOnOutsideClick: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nPortalWithState.defaultProps = {\n  onOpen: function onOpen() {},\n  onClose: function onClose() {}\n};\n\nexport default PortalWithState;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Arrow = exports.Popper = exports.Target = exports.Manager = undefined;\n\nvar _Manager2 = require('./Manager');\n\nvar _Manager3 = _interopRequireDefault(_Manager2);\n\nvar _Target2 = require('./Target');\n\nvar _Target3 = _interopRequireDefault(_Target2);\n\nvar _Popper2 = require('./Popper');\n\nvar _Popper3 = _interopRequireDefault(_Popper2);\n\nvar _Arrow2 = require('./Arrow');\n\nvar _Arrow3 = _interopRequireDefault(_Arrow2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Manager = _Manager3.default;\nexports.Target = _Target3.default;\nexports.Popper = _Popper3.default;\nexports.Arrow = _Arrow3.default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Manager = function (_Component) {\n  _inherits(Manager, _Component);\n\n  function Manager() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Manager);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(_ref, [this].concat(args))), _this), _this._setTargetNode = function (node) {\n      _this._targetNode = node;\n    }, _this._getTargetNode = function () {\n      return _this._targetNode;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Manager, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        popperManager: {\n          setTargetNode: this._setTargetNode,\n          getTargetNode: this._getTargetNode\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          tag = _props.tag,\n          children = _props.children,\n          restProps = _objectWithoutProperties(_props, ['tag', 'children']);\n\n      if (tag !== false) {\n        return (0, _react.createElement)(tag, restProps, children);\n      } else {\n        return children;\n      }\n    }\n  }]);\n\n  return Manager;\n}(_react.Component);\n\nManager.childContextTypes = {\n  popperManager: _propTypes2.default.object.isRequired\n};\nManager.propTypes = {\n  tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])\n};\nManager.defaultProps = {\n  tag: 'div'\n};\nexports.default = Manager;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Target = function Target(props, context) {\n  var _props$component = props.component,\n      component = _props$component === undefined ? 'div' : _props$component,\n      innerRef = props.innerRef,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);\n\n  var popperManager = context.popperManager;\n\n  var targetRef = function targetRef(node) {\n    popperManager.setTargetNode(node);\n    if (typeof innerRef === 'function') {\n      innerRef(node);\n    }\n  };\n\n  if (typeof children === 'function') {\n    var targetProps = { ref: targetRef };\n    return children({ targetProps: targetProps, restProps: restProps });\n  }\n\n  var componentProps = _extends({}, restProps);\n\n  if (typeof component === 'string') {\n    componentProps.ref = targetRef;\n  } else {\n    componentProps.innerRef = targetRef;\n  }\n\n  return (0, _react.createElement)(component, componentProps, children);\n};\n\nTarget.contextTypes = {\n  popperManager: _propTypes2.default.object.isRequired\n};\n\nTarget.propTypes = {\n  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n  innerRef: _propTypes2.default.func,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])\n};\n\nexports.default = Target;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _popper = require('popper.js');\n\nvar _popper2 = _interopRequireDefault(_popper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar noop = function noop() {\n  return null;\n};\n\nvar Popper = function (_Component) {\n  _inherits(Popper, _Component);\n\n  function Popper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Popper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._setArrowNode = function (node) {\n      _this._arrowNode = node;\n    }, _this._getTargetNode = function () {\n      return _this.context.popperManager.getTargetNode();\n    }, _this._getOffsets = function (data) {\n      return Object.keys(data.offsets).map(function (key) {\n        return data.offsets[key];\n      });\n    }, _this._isDataDirty = function (data) {\n      if (_this.state.data) {\n        return JSON.stringify(_this._getOffsets(_this.state.data)) !== JSON.stringify(_this._getOffsets(data));\n      } else {\n        return true;\n      }\n    }, _this._updateStateModifier = {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        if (_this._isDataDirty(data)) {\n          _this.setState({ data: data });\n        }\n        return data;\n      }\n    }, _this._getPopperStyle = function () {\n      var data = _this.state.data;\n\n      // If Popper isn't instantiated, hide the popperElement\n      // to avoid flash of unstyled content\n\n      if (!_this._popper || !data) {\n        return {\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0\n        };\n      }\n\n      var _data$offsets$popper = data.offsets.popper,\n          top = _data$offsets$popper.top,\n          left = _data$offsets$popper.left,\n          position = _data$offsets$popper.position;\n\n\n      return _extends({\n        position: position\n      }, data.styles);\n    }, _this._getPopperPlacement = function () {\n      return !!_this.state.data ? _this.state.data.placement : undefined;\n    }, _this._getPopperHide = function () {\n      return !!_this.state.data && _this.state.data.hide ? '' : undefined;\n    }, _this._getArrowStyle = function () {\n      if (!_this.state.data || !_this.state.data.offsets.arrow) {\n        return {};\n      } else {\n        var _this$state$data$offs = _this.state.data.offsets.arrow,\n            top = _this$state$data$offs.top,\n            left = _this$state$data$offs.left;\n\n        return { top: top, left: left };\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Popper, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        popper: {\n          setArrowNode: this._setArrowNode,\n          getArrowStyle: this._getArrowStyle\n        }\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._updatePopper();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(lastProps) {\n      if (lastProps.placement !== this.props.placement || lastProps.eventsEnabled !== this.props.eventsEnabled) {\n        this._updatePopper();\n      }\n\n      if (this._popper && lastProps.children !== this.props.children) {\n        this._popper.scheduleUpdate();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._destroyPopper();\n    }\n  }, {\n    key: '_updatePopper',\n    value: function _updatePopper() {\n      this._destroyPopper();\n      if (this._node) {\n        this._createPopper();\n      }\n    }\n  }, {\n    key: '_createPopper',\n    value: function _createPopper() {\n      var _props = this.props,\n          placement = _props.placement,\n          eventsEnabled = _props.eventsEnabled;\n\n      var modifiers = _extends({}, this.props.modifiers, {\n        applyStyle: { enabled: false },\n        updateState: this._updateStateModifier\n      });\n\n      if (this._arrowNode) {\n        modifiers.arrow = {\n          element: this._arrowNode\n        };\n      }\n\n      this._popper = new _popper2.default(this._getTargetNode(), this._node, {\n        placement: placement,\n        eventsEnabled: eventsEnabled,\n        modifiers: modifiers\n      });\n\n      // schedule an update to make sure everything gets positioned correct\n      // after being instantiated\n      this._popper.scheduleUpdate();\n    }\n  }, {\n    key: '_destroyPopper',\n    value: function _destroyPopper() {\n      if (this._popper) {\n        this._popper.destroy();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          component = _props2.component,\n          innerRef = _props2.innerRef,\n          placement = _props2.placement,\n          eventsEnabled = _props2.eventsEnabled,\n          modifiers = _props2.modifiers,\n          children = _props2.children,\n          restProps = _objectWithoutProperties(_props2, ['component', 'innerRef', 'placement', 'eventsEnabled', 'modifiers', 'children']);\n\n      var popperRef = function popperRef(node) {\n        _this2._node = node;\n        if (typeof innerRef === 'function') {\n          innerRef(node);\n        }\n      };\n      var popperStyle = this._getPopperStyle();\n      var popperPlacement = this._getPopperPlacement();\n      var popperHide = this._getPopperHide();\n\n      if (typeof children === 'function') {\n        var _popperProps;\n\n        var popperProps = (_popperProps = {\n          ref: popperRef,\n          style: popperStyle\n        }, _defineProperty(_popperProps, 'data-placement', popperPlacement), _defineProperty(_popperProps, 'data-x-out-of-boundaries', popperHide), _popperProps);\n        return children({\n          popperProps: popperProps,\n          restProps: restProps,\n          scheduleUpdate: this._popper && this._popper.scheduleUpdate\n        });\n      }\n\n      var componentProps = _extends({}, restProps, {\n        style: _extends({}, restProps.style, popperStyle),\n        'data-placement': popperPlacement,\n        'data-x-out-of-boundaries': popperHide\n      });\n\n      if (typeof component === 'string') {\n        componentProps.ref = popperRef;\n      } else {\n        componentProps.innerRef = popperRef;\n      }\n\n      return (0, _react.createElement)(component, componentProps, children);\n    }\n  }]);\n\n  return Popper;\n}(_react.Component);\n\nPopper.contextTypes = {\n  popperManager: _propTypes2.default.object.isRequired\n};\nPopper.childContextTypes = {\n  popper: _propTypes2.default.object.isRequired\n};\nPopper.propTypes = {\n  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n  innerRef: _propTypes2.default.func,\n  placement: _propTypes2.default.oneOf(_popper2.default.placements),\n  eventsEnabled: _propTypes2.default.bool,\n  modifiers: _propTypes2.default.object,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])\n};\nPopper.defaultProps = {\n  component: 'div',\n  placement: 'bottom',\n  eventsEnabled: true,\n  modifiers: {}\n};\nexports.default = Popper;","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.9\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    if (element) {\n      return element.ownerDocument.documentElement;\n    }\n\n    return document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function () {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE10$1() && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Arrow = function Arrow(props, context) {\n  var _props$component = props.component,\n      component = _props$component === undefined ? 'span' : _props$component,\n      innerRef = props.innerRef,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);\n\n  var popper = context.popper;\n\n  var arrowRef = function arrowRef(node) {\n    popper.setArrowNode(node);\n    if (typeof innerRef === 'function') {\n      innerRef(node);\n    }\n  };\n  var arrowStyle = popper.getArrowStyle();\n\n  if (typeof children === 'function') {\n    var arrowProps = {\n      ref: arrowRef,\n      style: arrowStyle\n    };\n    return children({ arrowProps: arrowProps, restProps: restProps });\n  }\n\n  var componentProps = _extends({}, restProps, {\n    style: _extends({}, arrowStyle, restProps.style)\n  });\n\n  if (typeof component === 'string') {\n    componentProps.ref = arrowRef;\n  } else {\n    componentProps.innerRef = arrowRef;\n  }\n\n  return (0, _react.createElement)(component, componentProps, children);\n};\n\nArrow.contextTypes = {\n  popper: _propTypes2.default.object.isRequired\n};\n\nArrow.propTypes = {\n  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n  innerRef: _propTypes2.default.func,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])\n};\n\nexports.default = Arrow;"],"sourceRoot":""}