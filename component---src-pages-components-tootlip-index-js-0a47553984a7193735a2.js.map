{"version":3,"sources":["webpack:///./src/pages/components/tootlip/index.js"],"names":["React","_interopRequireWildcard","__webpack_require__","_mangoComponents","_Layout","_interopRequireDefault","TootlipExample","exampleBottomPlacementButtonIsActive","exampleButtonIsActive","exampleLeftPlacementButtonIsActive","exampleRightPlacementButtonIsActive","exampleTopPlacementButtonIsActive","isHovering","e","i","default","t","prototype","render","_this2","this","_this$state","state","createElement","onMouseOver","setState","onFocus","onMouseOut","onBlur","Tootlip","visible","placement","tootlipPlacements","auto","type","onClick","right","left","top","bottom","Component","component"],"mappings":"kPAEAA,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,MAaaI,4MAETC,wCACAC,yBACAC,sCACAC,uCACAC,qCACAC,gBAAYC,EAAA,SAAAC,EAAAC,SAAAF,EAAAG,GAAAH,EAAAI,UAGdC,kBAAS,IAAAC,EAAAC,KAAAC,EAQHD,KAAKE,MANPf,EAFKc,EAELd,qCACAC,EAHKa,EAGLb,sBACAC,EAJKY,EAILZ,mCACAC,EALKW,EAKLX,oCACAC,EANKU,EAMLV,kCACAC,EAPKS,EAOLT,WAGF,OACEZ,EAAAuB,cAACnB,EAAAW,QAAD,KACEf,EAAAuB,cAAA,qBACAvB,EAAAuB,cAAA,SACEvB,EAAAuB,cAAA,QACEC,YAAa,WACXL,EAAKM,UAAWb,iBAElBc,QAAS,WACPP,EAAKM,UAAWb,iBAElBe,WAAY,WACVR,EAAKM,UAAWb,iBAElBgB,OAAQ,WACNT,EAAKM,UAAWb,kBAXpB,cAeEZ,EAAAuB,cAACpB,EAAA0B,SAAQC,QAASlB,EAAYmB,UAAWC,oBAAkBC,MAA3D,QAGM,IAnBV,kBAsBAjC,EAAAuB,cAAA,6CACAvB,EAAAuB,cAAA,WACEvB,EAAAuB,cAAA,UACEW,KAAK,SACLC,QAAS,WACPhB,EAAKM,UACHjB,uBAAwBA,MAI3B,kBACDR,EAAAuB,cAACpB,EAAA0B,SACCC,QAAStB,EACTuB,UAAWC,oBAAkBC,MAF/B,4CAQJjC,EAAAuB,cAAA,uDACAvB,EAAAuB,cAAA,kHAIAvB,EAAAuB,cAAA,WACEvB,EAAAuB,cAAA,UACEW,KAAK,SACLC,QAAS,WACPhB,EAAKM,UACHf,qCAAsCA,MAIzC,kBACDV,EAAAuB,cAACpB,EAAA0B,SACCC,QAASpB,EACTqB,UAAWC,oBAAkBI,OAF/B,kBAOFpC,EAAAuB,cAAA,UACEW,KAAK,SACLC,QAAS,kBACPhB,EAAKM,UACHhB,oCAAqCA,MAIxC,iBACDT,EAAAuB,cAACpB,EAAA0B,SACCC,QAASrB,EACTsB,UAAWC,oBAAkBK,MAF/B,kBAOFrC,EAAAuB,cAAA,UACEW,KAAK,SACLC,QAAS,WACPhB,EAAKM,UACHd,mCAAoCA,MAIvC,gBACDX,EAAAuB,cAACpB,EAAA0B,SACCC,QAASnB,EACToB,UAAWC,oBAAkBM,KAF/B,mBAOFtC,EAAAuB,cAAA,UACEW,KAAK,SACLC,QAAS,kBACPhB,EAAKM,UACHlB,sCAAuCA,MAI1C,mBACDP,EAAAuB,cAACpB,EAAA0B,SACCC,QAASvB,EACTwB,UAAWC,oBAAkBO,QAF/B,sBAAA1B,EA/HCP,CAAuBN,EAAMwC,8BA4InC,IAAMC,EAAYnC,sBAEVmC","file":"component---src-pages-components-tootlip-index-js-0a47553984a7193735a2.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { tootlipPlacements, Tootlip } from 'mango-components';\nimport Layout from '../../../containers/Layout';\n\ntype Props = {};\n\ntype State = {\n  exampleBottomPlacementButtonIsActive: boolean,\n  exampleButtonIsActive: boolean,\n  exampleLeftPlacementButtonIsActive: boolean,\n  exampleRightPlacementButtonIsActive: boolean,\n  exampleTopPlacementButtonIsActive: boolean,\n  isHovering: boolean,\n};\n\nexport class TootlipExample extends React.Component<Props, State> {\n  state = {\n    exampleBottomPlacementButtonIsActive: false,\n    exampleButtonIsActive: false,\n    exampleLeftPlacementButtonIsActive: false,\n    exampleRightPlacementButtonIsActive: false,\n    exampleTopPlacementButtonIsActive: false,\n    isHovering: false,\n  };\n\n  render() {\n    const {\n      exampleBottomPlacementButtonIsActive,\n      exampleButtonIsActive,\n      exampleLeftPlacementButtonIsActive,\n      exampleRightPlacementButtonIsActive,\n      exampleTopPlacementButtonIsActive,\n      isHovering,\n    } = this.state;\n\n    return (\n      <Layout>\n        <h2>Tootlip</h2>\n        <p>\n          <span\n            onMouseOver={() => {\n              this.setState({ isHovering: true });\n            }}\n            onFocus={() => {\n              this.setState({ isHovering: true });\n            }}\n            onMouseOut={() => {\n              this.setState({ isHovering: false });\n            }}\n            onBlur={() => {\n              this.setState({ isHovering: false });\n            }}\n          >\n            Hover on me\n            <Tootlip visible={isHovering} placement={tootlipPlacements.auto}>\n              Hey\n            </Tootlip>\n          </span>{' '}\n          for a tootlip.\n        </p>\n        <p>You can use it with buttons too.</p>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleButtonIsActive: !exampleButtonIsActive,\n              });\n            }}\n          >\n            {'Press (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleButtonIsActive}\n              placement={tootlipPlacements.auto}\n            >\n              Thanks for following the instructions.\n            </Tootlip>\n          </button>\n        </div>\n        <p>There are a couple of positioning options.</p>\n        <p>\n          If it looks like the tooltip is colliding with the edge of the\n          viewport, it will try other positions.\n        </p>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleRightPlacementButtonIsActive: !exampleRightPlacementButtonIsActive,\n              });\n            }}\n          >\n            {'Right (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleRightPlacementButtonIsActive}\n              placement={tootlipPlacements.right}\n            >\n              Mango Chutney\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() =>\n              this.setState({\n                exampleLeftPlacementButtonIsActive: !exampleLeftPlacementButtonIsActive,\n              })\n            }\n          >\n            {'Left (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleLeftPlacementButtonIsActive}\n              placement={tootlipPlacements.left}\n            >\n              Among Chutney\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                exampleTopPlacementButtonIsActive: !exampleTopPlacementButtonIsActive,\n              });\n            }}\n          >\n            {'Top (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleTopPlacementButtonIsActive}\n              placement={tootlipPlacements.top}\n            >\n              Ace Gunny Moth\n            </Tootlip>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() =>\n              this.setState({\n                exampleBottomPlacementButtonIsActive: !exampleBottomPlacementButtonIsActive,\n              })\n            }\n          >\n            {'Bottom (･ω´･ )́)'}\n            <Tootlip\n              visible={exampleBottomPlacementButtonIsActive}\n              placement={tootlipPlacements.bottom}\n            >\n              Cage Ohm Tunny\n            </Tootlip>\n          </button>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const component = TootlipExample;\n\nexport default component;\n"],"sourceRoot":""}